
# ðŸ¤– usage
#
# this file contains the conf for GitHub Continuous Integration
#   and Continuous Deployment to Heroku
#
# in order to activate the tests in GitHub CI:
# - uncomment the content of the CI paragraph (lines 41-55)
# - create some tests in the tests/ directory
#
# in order to activate CD to Heroku:
# - activate the tests in GitHub CI
# - uncomment the content of the CD paragraph (lines 57-75)

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # ðŸ¤– CI paragraph
  #
  # uncomment the content of this paragraph to activate the tests in GitHub CI
  # - remove the 2 trailing characters "# ", do not change the spaces
  #   (the `name` keys should be at the same level as the `uses` key)
  #   (the `strategy` key should be at the same level as the `steps` key)

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Say hello
      run: |
        echo "Hello, World!"
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    # - name: Install package and test
    #   run: |
    #     make install test clean

    # strategy:
    #   matrix:
    #     python-version: [3.8]

  # # ðŸ¤– CD paragraph
  # #
  # # uncomment the following lines to activate CD to Heroku
  # # - remove the 2 trailing characters "# ", do not change the spaces
  # #   (there should be 2 spaces before the `deploy_heroku` key)
  # # - keep in mind you also need to configure Heroku HEROKU_API_KEY and HEROKU_EMAIL in GitHub secrets
  # # - and replace REPLACE_WITH_YOUR_HEROKU_APP_NAME in this file with the name of your Heroku app

  deploy_heroku:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: akhileshns/heroku-deploy@v3.0.4 # This is the action
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "xray-diagnosis-lewagon-bsas" # Must be unique in Heroku
        heroku_email: ${{secrets.HEROKU_EMAIL}}



# GitHub Action that uses Black to reformat the Python code in an incoming pull request.
# If all Python code in the pull request is compliant with Black then this Action does nothing.
# Othewrwise, Black is run and its changes are committed back to the incoming pull request.
# https://github.com/cclauss/autoblack

# name: autoblack
# on: [pull_request]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: Set up Python 3.7
#         uses: actions/setup-python@v1
#         with:
#           python-version: 3.7
#       - name: Install Black
#         run: pip install black
#       - name: Run black --check .
#         run: black --check .
#       - name: If needed, commit black changes to the pull request
#         if: failure()
#         run: |
#           black .
#           git config --global user.name 'autoblack'
#           git config --global user.email 'cclauss@users.noreply.github.com'
#           git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
#           git checkout $GITHUB_HEAD_REF
#           git commit -am "fixup: Format Python code with Black"
#           git push


# # peql
